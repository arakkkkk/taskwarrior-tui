on: [pull_request]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    env:
      TASKRC: taskwarrior-testdata/.taskrc
      TASKDATA: taskwarrior-testdata/.task
      RUST_BACKTRACE: full
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt-get update
      - name: Compile taskwarrior
        run: |
          cd /tmp
          git clone https://github.com/GothenburgBitFactory/taskwarrior
          cd taskwarrior
          git checkout v2.6.1
          cmake -DCMAKE_BUILD_TYPE=release -DENABLE_SYNC=OFF .
          make
          sudo make install
      - run: |
          task --version
      - uses: actions/checkout@v2
        with:
          repository: kdheepak/taskwarrior-testdata
          path: taskwarrior-testdata
      - run: |
          # prepare taskwarrior, initial setup
          task rc.confirmation=off || echo 0
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all -- --nocapture

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
